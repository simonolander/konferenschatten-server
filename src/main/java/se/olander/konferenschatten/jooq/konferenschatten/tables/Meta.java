/*
 * This file is generated by jOOQ.
*/
package se.olander.konferenschatten.jooq.konferenschatten.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import se.olander.konferenschatten.jooq.konferenschatten.Keys;
import se.olander.konferenschatten.jooq.konferenschatten.Konferenschatten;
import se.olander.konferenschatten.jooq.konferenschatten.tables.records.MetaRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Meta extends TableImpl<MetaRecord> {

    private static final long serialVersionUID = 2003998525;

    /**
     * The reference instance of <code>konferenschatten.meta</code>
     */
    public static final Meta META = new Meta();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MetaRecord> getRecordType() {
        return MetaRecord.class;
    }

    /**
     * The column <code>konferenschatten.meta.id</code>.
     */
    public final TableField<MetaRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>konferenschatten.meta.timestamp</code>.
     */
    public final TableField<MetaRecord, Timestamp> TIMESTAMP = createField("timestamp", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>konferenschatten.meta.username</code>.
     */
    public final TableField<MetaRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>konferenschatten.meta.data</code>.
     */
    public final TableField<MetaRecord, Object> DATA = createField("data", org.jooq.impl.DefaultDataType.getDefaultDataType("json"), this, "");

    /**
     * Create a <code>konferenschatten.meta</code> table reference
     */
    public Meta() {
        this("meta", null);
    }

    /**
     * Create an aliased <code>konferenschatten.meta</code> table reference
     */
    public Meta(String alias) {
        this(alias, META);
    }

    private Meta(String alias, Table<MetaRecord> aliased) {
        this(alias, aliased, null);
    }

    private Meta(String alias, Table<MetaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Konferenschatten.KONFERENSCHATTEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MetaRecord, Integer> getIdentity() {
        return Keys.IDENTITY_META;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MetaRecord> getPrimaryKey() {
        return Keys.KEY_META_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MetaRecord>> getKeys() {
        return Arrays.<UniqueKey<MetaRecord>>asList(Keys.KEY_META_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Meta as(String alias) {
        return new Meta(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Meta rename(String name) {
        return new Meta(name, null);
    }
}
